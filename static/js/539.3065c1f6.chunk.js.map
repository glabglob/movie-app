{"version":3,"file":"static/js/539.3065c1f6.chunk.js","mappings":"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","sources":["components/pages/season-page/SeasonPage.tsx","../node_modules/react-spinners/esm/BeatLoader.js"],"sourcesContent":["import { MediaType } from '../../../utils/types/types';\r\n\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect } from 'react';\r\nimport { BeatLoader } from 'react-spinners';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { useAppDispatch } from '../../../utils/hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../utils/hooks/useAppSelector';\r\nimport { getSeasons } from '../../../slices/seasonSlice';\r\n\r\nimport AppContainer from '../../container/AppContainer';\r\nimport ImageContainer from '../../image-container/ImageContainer';\r\n\r\nimport './seasonPage.scss';\r\n\r\ninterface SeasonPageProps {\r\n    type: MediaType\r\n}\r\n\r\nconst SeasonPage: React.FC<SeasonPageProps> = (props: SeasonPageProps) => {\r\n\r\n    const { id, seasonNumber } = useParams<any>();\r\n\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        seasonFetchStatus,\r\n        season\r\n    } = useAppSelector(state => state.seasonReducer);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSeasons({ mediaType: 'tv', tvId: `${id}`, seasonId: `${seasonNumber}` }));\r\n        // eslint-disable-next-line\r\n    }, [seasonNumber, id]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content={`${season.title} page`} />\r\n                <title>{season.title}</title>\r\n            </Helmet>\r\n            <main>\r\n                <section className=\"movie__hero\">\r\n                    <ImageContainer\r\n                        imgSrc={`https://image.tmdb.org/t/p/original${season.poster}`}\r\n                        alt={`${season.title}`}\r\n                        clazz='movie__hero-img'\r\n                    />\r\n                </section>\r\n                <AppContainer>\r\n                    <section className=\"section movie__poster\">\r\n                        <ImageContainer\r\n                            imgSrc={`https://image.tmdb.org/t/p/original${season.poster}`}\r\n                            alt={`${season.title}`}\r\n                            clazz='poster'\r\n                        />\r\n                        <article className=\"movie__poster-info\">\r\n                            <h3 className=\"movie__poster-title\">{season.title}</h3>\r\n                            <p className=\"movie__poster-description\">Season 1 - {season.episodes?.length} episodes</p>\r\n                        </article>\r\n                    </section>\r\n                    <section className=\"section movie__list\">\r\n                        {\r\n                            (seasonFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                season.episodes?.map((episode, i) => (\r\n                                    <div className=\"movie__list-item-container\" key={i}>\r\n                                        <Link to={`/tv/${id}/season/${seasonNumber}/episode/${episode.episodeNumber}`}>\r\n                                            <div className=\"movie__list-item\">\r\n                                                <ImageContainer\r\n                                                    imgSrc={`https://image.tmdb.org/t/p/original${episode.poster}`}\r\n                                                    alt={`${episode.title}`}\r\n                                                    clazz='movie__list-img'\r\n                                                />\r\n                                                <article className=\"movie__list-item_info\">\r\n                                                    <h3 className='movie__list-title'>Episode <span>{episode.episodeNumber}</span></h3>\r\n                                                    <h3 className='movie__list-title'>{episode.title}</h3>\r\n                                                    <p className='movie__list-description'>{episode.description}</p>\r\n                                                    <span className='movie__list-date'>{episode.date}</span>\r\n                                                </article>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                ))\r\n                        }\r\n                    </section>\r\n                </AppContainer>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SeasonPage;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar beat = createAnimation(\"BeatLoader\", \"50% {transform: scale(0.75);opacity: 0.2} 100% {transform: scale(1);opacity: 1}\", \"beat\");\nfunction BeatLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 15 : _f, _g = _a.margin, margin = _g === void 0 ? 2 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\", \"margin\"]);\n    var wrapper = __assign({ display: \"inherit\" }, cssOverride);\n    var style = function (i) {\n        return {\n            display: \"inline-block\",\n            backgroundColor: color,\n            width: cssValue(size),\n            height: cssValue(size),\n            margin: cssValue(margin),\n            borderRadius: \"100%\",\n            animation: \"\".concat(beat, \" \").concat(0.7 / speedMultiplier, \"s \").concat(i % 2 ? \"0s\" : \"\".concat(0.35 / speedMultiplier, \"s\"), \" infinite linear\"),\n            animationFillMode: \"both\",\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) }),\n        React.createElement(\"span\", { style: style(3) })));\n}\nexport default BeatLoader;\n"],"names":["props","_season$episodes","_season$episodes2","_useParams","useParams","id","seasonNumber","dispatch","useAppDispatch","_useAppSelector","useAppSelector","state","seasonReducer","seasonFetchStatus","season","useEffect","getSeasons","mediaType","tvId","concat","seasonId","_jsxs","_Fragment","children","Helmet","_jsx","name","content","title","className","ImageContainer","imgSrc","poster","alt","clazz","AppContainer","episodes","length","BeatLoader","color","cssOverride","margin","map","episode","i","Link","to","episodeNumber","description","date","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","beat","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","_f","size","_g","additionalprops","wrapper","display","style","backgroundColor","width","cssValue","height","borderRadius","animation","animationFillMode","React"],"sourceRoot":""}