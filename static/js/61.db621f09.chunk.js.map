{"version":3,"file":"static/js/61.db621f09.chunk.js","mappings":"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","sources":["components/movie-card/MovieCard.tsx","components/trending-hero/TrendingHero.tsx","components/pages/home-page/HomePage.tsx","components/slider/SliderComponent.tsx"],"sourcesContent":["import ImageContainer from '../image-container/ImageContainer';\r\n\r\nimport './movieCard.scss';\r\n\r\ninterface MovieCardProps {\r\n    image: string,\r\n    title: string,\r\n    clazz?: string,\r\n}\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = (props: MovieCardProps) => {\r\n\r\n    return (\r\n        <div className={(props.clazz ? `movie__card  ${props.clazz}` : 'movie__card ')}>\r\n            <ImageContainer\r\n                clazz='movie__cover'\r\n                imgSrc={props.image}\r\n                alt={props.title}\r\n            />\r\n            <h3 className=\"movie__card-title \">{props.title}</h3>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport ImageContainer from \"../image-container/ImageContainer\";\r\n\r\nimport './trendingHero.scss';\r\n\r\ninterface TrendingHeroProps {\r\n    image: string,\r\n    title: string,\r\n    description: string,\r\n    clazz?: string\r\n    mediaType: string,\r\n    movieId: number\r\n}\r\n\r\nconst TrendingHero: React.FC<TrendingHeroProps> = (props: TrendingHeroProps) => {\r\n\r\n    return (\r\n        <section\r\n            className=\"trendings__content\"\r\n        >\r\n            <Link to={`/${props.mediaType}/${props.movieId}`}>\r\n                <ImageContainer\r\n                    clazz={'trendings__cover'}\r\n                    imgSrc={props.image}\r\n                    alt={props.title}\r\n                />\r\n                <article className=\"trendings__content-info\">\r\n                    <p className=\"trendings__content-title\">\r\n                        {props.title}\r\n                    </p>\r\n                    <p className='trendings__content-description'>\r\n                        {props.description}\r\n                    </p>\r\n                </article>\r\n            </Link>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default TrendingHero;","import { Helmet } from \"react-helmet\";\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { BeatLoader } from 'react-spinners';\r\n\r\nimport AppContainer from '../../container/AppContainer';\r\nimport SliderComponent from '../../slider/SliderComponent';\r\nimport TrendingHero from '../../trending-hero/TrendingHero';\r\nimport MovieCard from '../../movie-card/MovieCard';\r\n\r\nimport { useAppDispatch } from '../../../utils/hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../utils/hooks/useAppSelector';\r\nimport { getTrendings, getInCinema, getPopular, getTopRatedTv, getTopRatedMovie } from '../../../slices/homePageSlice';\r\n\r\nimport './homePage.scss';\r\n\r\nconst HomePage: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        trendingsFetchStatus,\r\n        inCinemaFetchStatus,\r\n        popularFetchStatus,\r\n        topRatedTvFetchStatus,\r\n        topRatedMovieFetchStatus,\r\n        trendings,\r\n        inCinema,\r\n        popular,\r\n        topRatedTv,\r\n        topRatedMovie\r\n    } = useAppSelector(state => state.homePageReducer);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTrendings());\r\n        dispatch(getInCinema('movie'));\r\n        dispatch(getPopular());\r\n        dispatch(getTopRatedTv('tv'));\r\n        dispatch(getTopRatedMovie('movie'));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content=\"Movie App\" />\r\n                <title>Movie App</title>\r\n            </Helmet>\r\n            <main>\r\n                <AppContainer>\r\n                    <section className=\"hero__trending\">\r\n                        <h2>Trending</h2>\r\n                        {\r\n                            (trendingsFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                <SliderComponent\r\n                                    autoplay={true}\r\n                                    slidesToShow={1}\r\n                                    slidesToScroll={1}\r\n                                    autoplaySpeed={3500}\r\n                                    clazz={'slick__hero'}\r\n                                >\r\n                                    {\r\n                                        trendings.map((film, i) => (\r\n                                            <TrendingHero\r\n                                                image={`https://image.tmdb.org/t/p/original${film.cover}`}\r\n                                                title={film.title}\r\n                                                description={film.description}\r\n                                                mediaType={film.mediaType}\r\n                                                movieId={film.id}\r\n                                                key={i}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </SliderComponent>\r\n                        }\r\n                    </section>\r\n                    <section className='section cinema'>\r\n                        <h2>In <span>cinema</span></h2>\r\n                        {\r\n                            (inCinemaFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                <SliderComponent\r\n                                    autoplay={true}\r\n                                    clazz={'slick__cards'}\r\n                                >\r\n                                    {inCinema.map((film, i) => (\r\n                                        <Link to={`/${film.mediaType}/${film.id}`} key={i}>\r\n                                            <MovieCard\r\n                                                image={(!film.poster) ?\r\n                                                    `https://image.tmdb.org/t/p/original${film.cover}` :\r\n                                                    `https://image.tmdb.org/t/p/original${film.poster}`}\r\n                                                title={film.title}\r\n                                            />\r\n                                        </Link>\r\n                                    ))}\r\n                                </SliderComponent>\r\n                        }\r\n                    </section>\r\n                    <section className='section popular'>\r\n                        <h2>Whats <span>Popular</span></h2>\r\n                        {\r\n                            (popularFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                <SliderComponent\r\n                                    autoplay={true}\r\n                                    clazz={'slick__cards'}\r\n                                >\r\n                                    {popular.map((film, i) => (\r\n                                        <Link to={`/${film.mediaType}/${film.id}`} key={i}>\r\n                                            <MovieCard\r\n                                                image={(!film.poster) ?\r\n                                                    `https://image.tmdb.org/t/p/original/${film.cover}` :\r\n                                                    `https://image.tmdb.org/t/p/original${film.poster}`}\r\n                                                title={film.title}\r\n                                            />\r\n                                        </Link>\r\n                                    ))}\r\n                                </SliderComponent>\r\n                        }\r\n                    </section>\r\n                    <section className='section top_rated-tv'>\r\n                        <h2>top rated <span>tv's</span></h2>\r\n                        {\r\n                            (topRatedTvFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                <SliderComponent\r\n                                    autoplay={true}\r\n                                    clazz={'slick__cards'}\r\n                                >\r\n                                    {topRatedTv.map((film, i) => (\r\n                                        <Link to={`/${film.mediaType}/${film.id}`} key={i}>\r\n                                            <MovieCard\r\n                                                image={(!film.poster) ?\r\n                                                    `https://image.tmdb.org/t/p/original/${film.cover}` :\r\n                                                    `https://image.tmdb.org/t/p/original${film.poster}`}\r\n                                                title={film.title}\r\n                                            />\r\n                                        </Link>\r\n                                    ))}\r\n                                </SliderComponent>\r\n                        }\r\n                    </section>\r\n                    <section className='section top_rated-movies'>\r\n                        <h2>top rated <span>movies</span></h2>\r\n                        {\r\n                            (topRatedMovieFetchStatus !== 'idle') ?\r\n                                <BeatLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                <SliderComponent\r\n                                    autoplay={true}\r\n                                    clazz={'slick__cards'}\r\n                                >\r\n                                    {topRatedMovie.map((film, i) => (\r\n                                        <Link to={`/${film.mediaType}/${film.id}`} key={i}>\r\n                                            <MovieCard\r\n                                                image={(!film.poster) ?\r\n                                                    `https://image.tmdb.org/t/p/original/${film.cover}` :\r\n                                                    `https://image.tmdb.org/t/p/original${film.poster}`}\r\n                                                title={film.title}\r\n                                            />\r\n                                        </Link>\r\n                                    ))}\r\n                                </SliderComponent>\r\n                        }\r\n\r\n                    </section>\r\n                </AppContainer>\r\n            </main >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import Slick, { Settings } from 'react-slick';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './sliderComponent.scss';\r\n\r\ninterface SliderComponentProps extends Settings {\r\n    isMovieCard?: boolean\r\n    clazz?: string\r\n}\r\n\r\nconst SliderComponent: React.FC<SliderComponentProps> = (props: SliderComponentProps) => {\r\n\r\n    let settings: Settings = {\r\n        ...props,\r\n    };\r\n\r\n    if (props.clazz === 'slick__cards') {\r\n        settings = {\r\n            slidesToShow: 5,\r\n            slidesToScroll: 1,\r\n            swipe: false,\r\n            ...settings,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1025,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        swipe: true,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        swipe: true,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 391,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1,\r\n                        swipe: true,\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    if (props.clazz === 'slick__scroll') {\r\n        settings = {\r\n            slidesToShow: 5,\r\n            slidesToScroll: 1,\r\n            swipeToSlide: true,\r\n            infinite: true,\r\n            autoplaySpeed: 2000,\r\n            ...settings,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1025,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 992,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 391,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1,\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Slick\r\n            className={props.clazz}\r\n            autoplaySpeed={5000}\r\n            {...settings}\r\n        >\r\n            {props.children}\r\n        </Slick>\r\n    );\r\n}\r\n\r\nexport default SliderComponent;"],"names":["props","_jsxs","className","clazz","concat","children","_jsx","ImageContainer","imgSrc","image","alt","title","Link","to","mediaType","movieId","description","dispatch","useAppDispatch","_useAppSelector","useAppSelector","state","homePageReducer","trendingsFetchStatus","inCinemaFetchStatus","popularFetchStatus","topRatedTvFetchStatus","topRatedMovieFetchStatus","trendings","inCinema","popular","topRatedTv","topRatedMovie","useEffect","getTrendings","getInCinema","getPopular","getTopRatedTv","getTopRatedMovie","_Fragment","Helmet","name","content","AppContainer","BeatLoader","color","cssOverride","margin","SliderComponent","autoplay","slidesToShow","slidesToScroll","autoplaySpeed","map","film","i","TrendingHero","cover","id","MovieCard","poster","settings","_objectSpread","swipe","responsive","breakpoint","swipeToSlide","infinite","Slick"],"sourceRoot":""}