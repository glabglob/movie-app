{"version":3,"file":"static/js/855.92383975.chunk.js","mappings":"6OAsFA,UAlE8C,SAACA,GAE3C,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OAEFE,GAAWC,EAAAA,EAAAA,KACjBC,GAGIC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,aAAa,IAF3CC,EAAuBJ,EAAvBI,wBACAC,EAAYL,EAAZK,aAQJ,OALAC,EAAAA,EAAAA,YAAU,WACNR,GAASS,EAAAA,EAAAA,GAAgB,CAAEC,MAAM,GAADC,OAAKb,EAAOc,UAAU,MAE1D,GAAG,CAACd,KAGAe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAQ,iBACjCN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,sBAAoBjB,EAAOc,UAAU,GAAGQ,QAAQ,OAAQ,YAEnEP,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,WAASI,UAAU,aAAYN,UAC3BE,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CAAAP,UACTF,EAAAA,EAAAA,MAAA,MAAIQ,UAAU,mBAAkBN,SAAA,CAAC,uBAAmBE,EAAAA,EAAAA,KAAA,QAAAF,SAAA,GAAAJ,OAAUb,EAAOc,UAAU,GAAGQ,QAAQ,OAAQ,gBAG1GH,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CAAAP,UACTE,EAAAA,EAAAA,KAAA,WAASI,UAAU,mCAAkCN,SAEhB,SAA5BT,GACGW,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACPC,MAAM,UACNC,YAAa,CACTC,OAAQ,YAGS,IAAxBnB,EAAaoB,QACVV,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaN,UACxBE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,oBAERR,EAAaqB,KAAI,SAACC,EAAOC,GAAC,OACtBb,EAAAA,EAAAA,KAAA,OAAKI,UAAU,6BAA4BN,UACvCE,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAE,IAAArB,OAAMkB,EAAMI,UAAS,KAAAtB,OAAIkB,EAAMK,IAAKnB,UACxCF,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,mBAAkBN,SAAA,EAC7BE,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CACXC,OAAM,sCAAAzB,OAAwCkB,EAAMQ,QACpDC,IAAKT,EAAMU,MACXC,MAAM,qBAEV3B,EAAAA,EAAAA,MAAA,WAASQ,UAAU,wBAAuBN,SAAA,EACtCE,EAAAA,EAAAA,KAAA,MAAII,UAAU,oBAAmBN,SAAEc,EAAMU,SACzCtB,EAAAA,EAAAA,KAAA,KAAGI,UAAU,0BAAyBN,SAAEc,EAAMY,uBAVbX,EAc3C,aAQ9C,C","sources":["components/pages/search-page/SearchPage.tsx"],"sourcesContent":["import { MediaType } from '../../../utils/types/types';\r\n\r\nimport { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { GridLoader } from 'react-spinners';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport AppContainer from '../../container/AppContainer';\r\nimport ImageContainer from '../../image-container/ImageContainer';\r\n\r\nimport { useAppDispatch } from '../../../utils/hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../utils/hooks/useAppSelector';\r\nimport { getSearchResult } from '../../../slices/searchSlice';\r\n\r\nimport './searchPage.scss';\r\n\r\ninterface SearchPageProps {\r\n    type: MediaType | 'search'\r\n}\r\n\r\nconst SearchPage: React.FC<SearchPageProps> = (props: SearchPageProps) => {\r\n\r\n    const { search } = useLocation();\r\n\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        serachResultFetchStatus,\r\n        searchResult\r\n    } = useAppSelector(state => state.searchReducer);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSearchResult({ query: `${search.substring(3)}` }));\r\n        // eslint-disable-next-line\r\n    }, [search]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content=\"Search page\" />\r\n                <title>Search results for:{search.substring(3).replace(/%20/g, ' ')}</title>\r\n            </Helmet>\r\n            <main>\r\n                <section className='page__hero'>\r\n                    <AppContainer>\r\n                        <h2 className='page__hero-title'>Search result for: <span>{`${search.substring(3).replace(/%20/g, ' ')}`}</span></h2>\r\n                    </AppContainer>\r\n                </section>\r\n                <AppContainer>\r\n                    <section className=\"section movie__list search__list\">\r\n                        {\r\n                            (serachResultFetchStatus !== 'idle') ?\r\n                                <GridLoader\r\n                                    color='#582904'\r\n                                    cssOverride={{\r\n                                        margin: '0 auto'\r\n                                    }}\r\n                                /> :\r\n                                (searchResult.length === 0) ?\r\n                                    <div className=\"no__results\">\r\n                                        <h2>No Results...</h2>\r\n                                    </div> :\r\n                                    searchResult.map((movie, i) => (\r\n                                        <div className=\"movie__list-item-container\" key={i}>\r\n                                            <Link to={`/${movie.mediaType}/${movie.id}`} >\r\n                                                <div className=\"movie__list-item\" >\r\n                                                    <ImageContainer\r\n                                                        imgSrc={`https://image.tmdb.org/t/p/original${movie.poster}`}\r\n                                                        alt={movie.title}\r\n                                                        clazz='movie__list-img'\r\n                                                    />\r\n                                                    <article className=\"movie__list-item_info\">\r\n                                                        <h3 className='movie__list-title'>{movie.title}</h3>\r\n                                                        <p className='movie__list-description'>{movie.description}</p>\r\n                                                    </article>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    ))\r\n                        }\r\n                    </section>\r\n                </AppContainer>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchPage;"],"names":["props","search","useLocation","dispatch","useAppDispatch","_useAppSelector","useAppSelector","state","searchReducer","serachResultFetchStatus","searchResult","useEffect","getSearchResult","query","concat","substring","_jsxs","_Fragment","children","Helmet","_jsx","name","content","replace","className","AppContainer","GridLoader","color","cssOverride","margin","length","map","movie","i","Link","to","mediaType","id","ImageContainer","imgSrc","poster","alt","title","clazz","description"],"sourceRoot":""}