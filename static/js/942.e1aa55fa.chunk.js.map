{"version":3,"file":"static/js/942.e1aa55fa.chunk.js","mappings":"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","sources":["components/pages/actor-page/ActorPage.tsx","../node_modules/react-spinners/esm/BeatLoader.js"],"sourcesContent":["import { MediaType } from '../../../utils/types/types';\r\n\r\nimport { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { BeatLoader, GridLoader } from 'react-spinners';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { useAppDispatch } from '../../../utils/hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../utils/hooks/useAppSelector';\r\nimport { getKnownFor, getActorDetails } from \"../../../slices/actorPageSlice\";\r\n\r\nimport AppContainer from '../../container/AppContainer';\r\nimport ImageContainer from '../../image-container/ImageContainer';\r\n\r\nimport './actorPage.scss';\r\n\r\ninterface ActorPageProps {\r\n    type: MediaType\r\n}\r\n\r\nconst ActorPage: React.FC<ActorPageProps> = (props: ActorPageProps) => {\r\n\r\n    const { id } = useParams<any>();\r\n\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        knownForFetchStatus,\r\n        actorDetailsFetchStatus,\r\n        knownFor,\r\n        actorDetails\r\n    } = useAppSelector(state => state.actorPageReducer);\r\n\r\n    useEffect(() => {\r\n        dispatch(getKnownFor({ personId: `${id}` }));\r\n        dispatch(getActorDetails({ personId: `${id}` }));\r\n\r\n    }, [id]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta name=\"description\" content={`${actorDetails.name} page`} />\r\n                <title>{actorDetails.name}</title>\r\n            </Helmet>\r\n            <main>\r\n                <AppContainer>\r\n                    {\r\n                        (actorDetailsFetchStatus !== 'idle') ?\r\n                            <GridLoader\r\n                                color='#582904'\r\n                                cssOverride={{\r\n                                    margin: '0 auto',\r\n                                    marginTop: '150px'\r\n                                }}\r\n                            /> :\r\n                            <section className=\"section movie__poster actor__poster\">\r\n                                <div className=\"poster__container\">\r\n                                    <ImageContainer\r\n                                        imgSrc={`https://image.tmdb.org/t/p/original${actorDetails.poster}`}\r\n                                        alt={`${actorDetails.name}`}\r\n                                        clazz='poster'\r\n                                    />\r\n                                    <article className=\"movie__poster-info actor__info\">\r\n                                        <h3 className=\"movie__poster-title actor__name\">{actorDetails.name}</h3>\r\n                                        <p className=\"movie__poster-sub__heading\">Biography</p>\r\n                                        <p className='movie__poster-biography'>\r\n                                            {actorDetails.biography}\r\n                                        </p>\r\n                                    </article>\r\n                                </div>\r\n                            </section>\r\n                    }\r\n                    {\r\n                        (knownFor.length === 0) ? '' :\r\n                            <section className=\"section movie__list\">\r\n                                <h2 className='movie__list-heading'>Known For</h2>\r\n                                {\r\n                                    (knownForFetchStatus !== 'idle') ?\r\n                                        <BeatLoader\r\n                                            color='#582904'\r\n                                            cssOverride={{\r\n                                                margin: '0 auto'\r\n                                            }}\r\n                                        /> :\r\n                                        knownFor.map((movie, i) => (\r\n                                            <div className=\"movie__list-item-container\" key={i}>\r\n                                                <Link to={`/${movie.mediaType}/${movie.id}`}>\r\n                                                    <div className=\"movie__list-item\">\r\n                                                        <ImageContainer\r\n                                                            imgSrc={\r\n                                                                (movie.poster === undefined || movie.poster === null) ?\r\n                                                                    `https://image.tmdb.org/t/p/original${movie.cover}` :\r\n                                                                    `https://image.tmdb.org/t/p/original${movie.poster}`\r\n                                                            }\r\n                                                            alt={`${movie.title}`}\r\n                                                            clazz='movie__list-img'\r\n                                                        />\r\n                                                        <article className=\"movie__list-item_info\">\r\n                                                            <h3 className='movie__list-title'>{movie.title}</h3>\r\n                                                            <p className='movie__list-description'>{movie.description}</p>\r\n                                                            <span className='movie__list-date'>{movie.date}</span>\r\n                                                        </article>\r\n                                                    </div>\r\n                                                </Link>\r\n                                            </div>\r\n                                        ))\r\n                                }\r\n                            </section>\r\n                    }\r\n\r\n                </AppContainer>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ActorPage;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar beat = createAnimation(\"BeatLoader\", \"50% {transform: scale(0.75);opacity: 0.2} 100% {transform: scale(1);opacity: 1}\", \"beat\");\nfunction BeatLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 15 : _f, _g = _a.margin, margin = _g === void 0 ? 2 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\", \"margin\"]);\n    var wrapper = __assign({ display: \"inherit\" }, cssOverride);\n    var style = function (i) {\n        return {\n            display: \"inline-block\",\n            backgroundColor: color,\n            width: cssValue(size),\n            height: cssValue(size),\n            margin: cssValue(margin),\n            borderRadius: \"100%\",\n            animation: \"\".concat(beat, \" \").concat(0.7 / speedMultiplier, \"s \").concat(i % 2 ? \"0s\" : \"\".concat(0.35 / speedMultiplier, \"s\"), \" infinite linear\"),\n            animationFillMode: \"both\",\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) }),\n        React.createElement(\"span\", { style: style(3) })));\n}\nexport default BeatLoader;\n"],"names":["props","id","useParams","dispatch","useAppDispatch","_useAppSelector","useAppSelector","state","actorPageReducer","knownForFetchStatus","actorDetailsFetchStatus","knownFor","actorDetails","useEffect","getKnownFor","personId","concat","getActorDetails","_jsxs","_Fragment","children","Helmet","_jsx","name","content","AppContainer","GridLoader","color","cssOverride","margin","marginTop","className","ImageContainer","imgSrc","poster","alt","clazz","biography","length","BeatLoader","map","movie","i","Link","to","mediaType","undefined","cover","title","description","date","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","beat","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","_f","size","_g","additionalprops","wrapper","display","style","backgroundColor","width","cssValue","height","borderRadius","animation","animationFillMode","React"],"sourceRoot":""}